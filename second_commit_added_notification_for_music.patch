Index: app/src/main/java/Fragments/musicFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/Fragments/musicFragment.java	(revision cf73759abaaf20f2357f7431daf60f87bf358354)
+++ app/src/main/java/Fragments/musicFragment.java	(date 1552121712000)
@@ -29,10 +29,13 @@
 
 import java.text.SimpleDateFormat;
 import java.util.Date;
+import java.util.Locale;
+
+import ServiceCallbacks.ServiceCallbacks;
 
 import static com.munhj.meloplayer.MainActivity.item;
 
-public class musicFragment extends Fragment implements View.OnClickListener {
+public class musicFragment extends Fragment implements View.OnClickListener, ServiceCallbacks {
 
     private TextView songName, artist, leftTime, rightTime;
 
@@ -51,7 +54,9 @@
 
     @Nullable
     @Override
-    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)  {
+    public View onCreateView(@NonNull LayoutInflater inflater,
+                             @Nullable ViewGroup container,
+                             @Nullable Bundle savedInstanceState)  {
 
         musicView = inflater.inflate(R.layout.activity_music, container, false);
         setUpUI();
@@ -66,6 +71,7 @@
             MusicService.LocalBinder binder = ((MusicService.LocalBinder) service);
             musicService = binder.getService();
             mBound = true;
+            musicService.setCallbacks(musicFragment.this);
             loadUI();
         }
 
@@ -87,6 +93,7 @@
         prevButton = musicView.findViewById(R.id.prevButton);
         playButton = musicView.findViewById(R.id.playButton);
         nextButton = musicView.findViewById(R.id.nextButton);
+
         prevButton.setOnClickListener(this);
         playButton.setOnClickListener(this);
         nextButton.setOnClickListener(this);
@@ -96,11 +103,21 @@
     private void initiateService() {
         if(isMusicChosen && item != null) {
             Intent serviceIntent = new Intent(musicView.getContext(), MusicService.class);
-            musicView.getContext().bindService(serviceIntent, connection, Context.BIND_AUTO_CREATE);
+            serviceIntent.putExtra("stop_service", false);
+            musicView.getContext().bindService(serviceIntent,
+                    connection,
+                    Context.BIND_AUTO_CREATE);
         }
     }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        if(mBound)
+            loadUI();
+    }
 
-    private void loadUI() {
+    public void loadUI() {
 
         if(isMusicChosen && item != null) {
             songName.setText(item.getSongName());
@@ -112,8 +129,6 @@
             } else {
                 loadPaused();
             }
-
-
         }
 
 
@@ -124,8 +139,10 @@
                     musicService.seekTo(progress);
                     SimpleDateFormat dateFormat = new SimpleDateFormat("mm:ss");
 
-                    leftTime.setText(dateFormat.format(new Date(musicService.getCurrentPosition())));
-                    rightTime.setText(dateFormat.format(new Date(musicService.getDuration() - musicService.getCurrentPosition())));
+                    leftTime.setText(dateFormat
+                            .format(new Date(musicService.getCurrentPosition())));
+                    rightTime.setText(dateFormat
+                            .format(new Date(musicService.getDuration() - musicService.getCurrentPosition())));
 
             }
             @Override
@@ -140,7 +157,6 @@
 
     }
 
-
     // prev, play, next buttons
     @Override
     public void onClick(View v) {
@@ -198,12 +214,21 @@
         startMusic();
     }
 
+    @Override
+    public void onStop() {
+        super.onStop();
+        if(mBound) {
+            musicService.setCallbacks(null);
+        }
+    }
+
     private void loadPaused() {
         SimpleDateFormat dateFormat = new SimpleDateFormat("mm:ss");
 
-        leftTime.setText(dateFormat.format(new Date(musicService.getCurrentPosition())));
-        rightTime.setText(dateFormat.format(
-                new Date(musicService.getDuration() - musicService.getCurrentPosition())));
+        leftTime.setText(dateFormat
+                .format(new Date(musicService.getCurrentPosition())));
+        rightTime.setText(dateFormat
+                .format(new Date(musicService.getDuration() - musicService.getCurrentPosition())));
 
         seekBar.setMax(musicService.getDuration());
         seekBar.setProgress(musicService.getCurrentPosition());
@@ -226,7 +251,7 @@
                         getActivity().runOnUiThread(new Runnable() {
                             @Override
                             public void run() {
-                                if(musicService.isPlaying()) {
+                                if(!musicService.isNull() && musicService.isPlaying()) {
                                     int newPosition = musicService.getCurrentPosition();
                                     int newMax = musicService.getDuration();
                                     seekBar.setMax(newMax);
@@ -255,14 +280,11 @@
         thread.start();
     }
 
-
-
-
-
     public void setBottomNavigationView(BottomNavigationView bottomNavigationView) {
         this.bottomNavigationView = bottomNavigationView;
     }
 
+
     @Override
     public void onDestroy() {
         super.onDestroy();
@@ -272,4 +294,5 @@
         }
 
     }
+
 }
Index: app/src/main/java/com/munhj/meloplayer/MusicService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/munhj/meloplayer/MusicService.java	(revision cf73759abaaf20f2357f7431daf60f87bf358354)
+++ app/src/main/java/com/munhj/meloplayer/MusicService.java	(date 1552124473000)
@@ -10,9 +10,14 @@
 import android.os.Binder;
 import android.os.IBinder;
 import android.support.v4.app.NotificationCompat;
-
+import android.widget.RemoteViews;
+import android.widget.Toast;
 import java.io.IOException;
 
+
+import ServiceCallbacks.ServiceCallbacks;
+
+import static com.munhj.meloplayer.MainActivity.item;
 import static com.munhj.meloplayer.MusicNotification.CHANNEL_ID;
 
 public class MusicService extends Service implements AudioManager.OnAudioFocusChangeListener, MediaPlayer.OnCompletionListener {
@@ -21,8 +26,9 @@
     private String artist;
     private MediaPlayer mediaPlayer;
     private boolean isPaused;
-    private Notification notification;
     private PendingIntent pendingIntent;
+    private ServiceCallbacks serviceCallbacks;
+    private RemoteViews collapsedView;
 
     //Bound service
     private final IBinder binder = new LocalBinder();
@@ -40,7 +46,6 @@
         return binder;
     }
 
-
     @Override
     public void onCreate() {
         super.onCreate();
@@ -53,24 +58,115 @@
 
     @Override
     public int onStartCommand(Intent intent, int flags, int startId) {
-
+//        Log.d("extras", intent.getExtras().getString("stop_service"));
+        if(intent.hasExtra("key")) {
+            switch(intent.getExtras().getString("key")) {
+                case "stop_service":
+                    stopMusicService();
+                    break;
+                case "play_music":
+                    // if app is opened at the moment
+                    if(serviceCallbacks != null) {
+                        if(mediaPlayer.isPlaying()) serviceCallbacks.pauseMusic();
+                        else serviceCallbacks.startMusic();
+                    }
+                    else {
+                        if(mediaPlayer.isPlaying()) pauseMusic();
+                        else startMusic();
+                    }
+                    break;
+                case "next_music":
+                    if(serviceCallbacks != null) {
+                        serviceCallbacks.nextMusic();
+                    } else {
+                        nextMusic();
+                        startMusic();
+                    }
 
+                    break;
+                case "prev_music":
+                    if(serviceCallbacks != null) {
+                        serviceCallbacks.prevMusic();
+                    } else {
+                        prevMusic();
+                        startMusic();
+                    }
 
-
-
-        Intent notificationIntent = new Intent(this, MainActivity.class);
-        pendingIntent = PendingIntent.getActivity(this,
-                0, notificationIntent, 0);
+                    break;
+            }
+        }
+        else {
+            Intent notificationIntent = new Intent(this, MainActivity.class);
+            pendingIntent = PendingIntent.getActivity(this,
+                    0, notificationIntent, 0);
 
-        loadUI();
-        isPaused = false;
-        startMediaPlayer();
-
+            loadUI();
+            isPaused = false;
+            startMediaPlayer();
+        }
 
         return START_NOT_STICKY;
 
     }
 
+    public void stopMusicService() {
+        Toast.makeText(this, "stopping", Toast.LENGTH_LONG).show();
+        stopForeground(true);
+        stopSelf();
+        onDestroy();
+    }
+
+    public void showNotification() {
+        collapsedView = new RemoteViews(getPackageName(),
+                R.layout.notification_collapsed);
+
+        collapsedView.setImageViewBitmap(R.id.image_view_notification, item.getAlbumCover());
+        collapsedView.setTextViewText(R.id.songName_notification, songName);
+        collapsedView.setTextViewText(R.id.artist_notification, artist);
+
+        if(isPaused())
+            collapsedView.setImageViewResource(R.id.playButton_notification, R.drawable.ic_play);
+        else
+            collapsedView.setImageViewResource(R.id.playButton_notification, R.drawable.ic_pause);
+
+        collapsedView.setOnClickPendingIntent(R.id.stopButton_notification,
+                PendingIntent.getBroadcast(
+                        this,
+                        0,
+                        (new Intent(this, NotificationReceiver.class)).setAction("stop"),
+                        PendingIntent.FLAG_UPDATE_CURRENT));
+
+        collapsedView.setOnClickPendingIntent(R.id.playButton_notification,
+                PendingIntent.getBroadcast(
+                        this,
+                        0,
+                        (new Intent(this, NotificationReceiver.class)).setAction("play"),
+                        PendingIntent.FLAG_CANCEL_CURRENT));
+
+        collapsedView.setOnClickPendingIntent(R.id.prevButton_notification,
+                PendingIntent.getBroadcast(
+                        this,
+                        0,
+                        (new Intent(this, NotificationReceiver.class)).setAction("prev"),
+                        PendingIntent.FLAG_CANCEL_CURRENT));
+
+        collapsedView.setOnClickPendingIntent(R.id.nextButton_notification,
+                PendingIntent.getBroadcast(
+                this,
+                0,
+                (new Intent(this, NotificationReceiver.class)).setAction("next"),
+                PendingIntent.FLAG_CANCEL_CURRENT));
+
+
+        Notification notification = new NotificationCompat.Builder(this, CHANNEL_ID)
+                .setSmallIcon(R.drawable.ic_music_note_black_24dp)
+                .setCustomContentView(collapsedView)
+                .setContentIntent(pendingIntent)
+                .build();
+
+        startForeground(1, notification);
+    }
+
     public void loadUI() {
         if(MainActivity.item != null) {
             songName = MainActivity.item.getSongName();
@@ -78,14 +174,7 @@
             songPath = MainActivity.item.getSongPath();
         }
 
-        notification = new NotificationCompat.Builder(this, CHANNEL_ID)
-                .setContentTitle(songName)
-                .setContentText(artist)
-                .setSmallIcon(R.drawable.ic_music_note_black_24dp)
-                .setContentIntent(pendingIntent)
-                .build();
-
-        startForeground(1, notification);
+        showNotification();
     }
 
     @Override
@@ -97,15 +186,22 @@
             mediaPlayer.release();
             mediaPlayer = null;
         }
+        System.exit(0);
     }
 
     @Override
     public void onCompletion(MediaPlayer mp) {
-        if(MainActivity.item.getPos() != MainActivity.musicHandler.listItems.size() - 1)
-            MainActivity.item = MainActivity.musicHandler.listItems.get(MainActivity.item.getPos() + 1);
-        else
-            MainActivity.item = MainActivity.musicHandler.listItems.get(0);
-
+        if(MainActivity.item.getPos() != MainActivity.musicHandler.listItems.size() - 1) {
+            MainActivity.item = MainActivity
+                    .musicHandler
+                    .listItems
+                    .get(MainActivity.item.getPos() + 1);
+        }
+        else {
+            MainActivity.item = MainActivity
+                    .musicHandler
+                    .listItems.get(0);
+        }
 
         loadUI();
         startMediaPlayer();
@@ -129,6 +225,7 @@
             mediaPlayer.pause();
             isPaused = true;
         }
+        loadUI();
     }
 
     public void startMusic() {
@@ -139,48 +236,68 @@
         int result = am.requestAudioFocus(this, AudioManager.STREAM_MUSIC,
                 AudioManager.AUDIOFOCUS_GAIN);
 
-        if(result == AudioManager.AUDIOFOCUS_REQUEST_GRANTED)
-        {
+        if(result == AudioManager.AUDIOFOCUS_REQUEST_GRANTED) {
             // Play
             if(mediaPlayer != null && !mediaPlayer.isPlaying()) {
                 mediaPlayer.start();
                 isPaused = false;
             }
         }
+        loadUI();
     }
 
     public void prevMusic() {
-        if(MainActivity.item.getPos() != 0)
-            MainActivity.item = MainActivity.musicHandler.listItems.get(MainActivity.item.getPos() - 1);
-        else
-            MainActivity.item = MainActivity.musicHandler.listItems.get(MainActivity.musicHandler.listItems.size() - 1);
+        if(MainActivity.item.getPos() != 0) {
+            MainActivity.item = MainActivity
+                    .musicHandler
+                    .listItems
+                    .get(MainActivity.item.getPos() - 1);
+        }
+        else {
+            MainActivity.item = MainActivity
+                    .musicHandler
+                    .listItems
+                    .get(MainActivity.musicHandler.listItems.size() - 1);
+        }
 
         loadUI();
         startMediaPlayer();
 
+//        if(serviceCallbacks != null) serviceCallbacks.loadUI();
+//        startMusic();
     }
 
     public void nextMusic() {
         if(mediaPlayer != null && mediaPlayer.isPlaying())
             mediaPlayer.seekTo(mediaPlayer.getDuration() - 1);
 
-        if(MainActivity.item.getPos() != MainActivity.musicHandler.listItems.size() - 1)
-            MainActivity.item = MainActivity.musicHandler.listItems.get(MainActivity.item.getPos() + 1);
-        else
-            MainActivity.item = MainActivity.musicHandler.listItems.get(0);
+        if(MainActivity.item.getPos() != MainActivity.musicHandler.listItems.size() - 1) {
+            MainActivity.item = MainActivity
+                    .musicHandler
+                    .listItems
+                    .get(MainActivity.item.getPos() + 1);
+        }
+        else {
+            MainActivity.item = MainActivity
+                    .musicHandler
+                    .listItems.get(0);
+        }
 
 
         loadUI();
         startMediaPlayer();
+//        if(serviceCallbacks != null) serviceCallbacks.loadUI();
+//        startMusic();
 
 
     }
-
+    public boolean isNull() {
+        return mediaPlayer == null;
+    }
     public boolean isPlaying() {
         return mediaPlayer.isPlaying();
     }
 
-
     public int getCurrentPosition() {
         return mediaPlayer.getCurrentPosition();
     }
@@ -195,30 +312,29 @@
 
     public boolean isPaused() {
         return isPaused;
-
     }
 
     @Override
-    public void onAudioFocusChange(int focusChange)
-    {
-        if(focusChange == AudioManager.AUDIOFOCUS_LOSS_TRANSIENT)
-        {
+    public void onAudioFocusChange(int focusChange) {
+        if(focusChange == AudioManager.AUDIOFOCUS_LOSS_TRANSIENT) {
             // Pause
             mediaPlayer.pause();
         }
-        else if(focusChange == AudioManager.AUDIOFOCUS_GAIN)
-        {
+        else if(focusChange == AudioManager.AUDIOFOCUS_GAIN) {
             // Resume
 
         }
-        else if(focusChange == AudioManager.AUDIOFOCUS_LOSS)
-        {
+        else if(focusChange == AudioManager.AUDIOFOCUS_LOSS) {
             // Stop
             mediaPlayer.stop();
             mediaPlayer.release();
         }
     }
 
+    public void setCallbacks(ServiceCallbacks callbacks) {
+        this.serviceCallbacks = callbacks;
+    }
+
 
 
 }
Index: app/src/main/java/com/munhj/meloplayer/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/munhj/meloplayer/MainActivity.java	(revision cf73759abaaf20f2357f7431daf60f87bf358354)
+++ app/src/main/java/com/munhj/meloplayer/MainActivity.java	(date 1552123587000)
@@ -2,6 +2,7 @@
 
 import android.Manifest;
 import android.content.Intent;
+import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
 import android.support.design.widget.BottomNavigationView;
 import android.support.v4.app.ActivityCompat;
@@ -11,6 +12,8 @@
 import android.os.Bundle;
 import android.support.v7.widget.RecyclerView;
 import android.view.MenuItem;
+import android.view.View;
+import android.widget.Button;
 
 import java.io.IOException;
 
@@ -21,10 +24,7 @@
 import MusicHandler.MyMusicHandler;
 
 public class MainActivity extends AppCompatActivity {
-
     public static final int STORAGE_PERMISSION = 1;
-    private RecyclerView recyclerView;
-    private RecyclerView.Adapter adapter;
     public static MyMusicHandler musicHandler;
     public static ListItem item;
     public static ListItem savedItem;
@@ -34,16 +34,27 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
+        // ask for reading storage permission
         ActivityCompat.requestPermissions(this,
-                new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, STORAGE_PERMISSION);
+                new String[]{
+                        Manifest.permission.READ_EXTERNAL_STORAGE}, STORAGE_PERMISSION);
 
         bottomNav = findViewById(R.id.bottom_navigation);
         bottomNav.setOnNavigationItemSelectedListener(navListener);
 
-        musicHandler = new MyMusicHandler();
+        try {
+            musicHandler = new MyMusicHandler();
+        } catch(NullPointerException e) {
+            e.printStackTrace();
+        }
 
 
-        bottomNav.setSelectedItemId(R.id.nav_music_list);
+            if(!MusicNotification.isBackFromNotification) {
+                bottomNav.setSelectedItemId(R.id.nav_music_list);
+                MusicNotification.isBackFromNotification = true;
+            }
+            else
+                bottomNav.setSelectedItemId(R.id.nav_music_player);
 
 
     }
@@ -67,23 +78,15 @@
                             break;
                     }
 
-                    getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,
-                            selectedFragment).commit();
+                    getSupportFragmentManager()
+                            .beginTransaction()
+                            .replace(R.id.fragment_container, selectedFragment)
+                            .commit();
 
                     return true;
                 }
             };
 
 
-    public void startMusicService() {
-        Intent serviceIntent = new Intent(this, MusicService.class);
-        ContextCompat.startForegroundService(this, serviceIntent);
-    }
-
-    public void stopMusicService() {
-        Intent serviceIntent = new Intent(this, MusicService.class);
-        stopService(serviceIntent);
-    }
-
 
 }
Index: app/src/main/res/layout/activity_music.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_music.xml	(revision cf73759abaaf20f2357f7431daf60f87bf358354)
+++ app/src/main/res/layout/activity_music.xml	(date 1551791420000)
@@ -5,6 +5,7 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     tools:context=".MainActivity">
+
     <ImageView
         android:id="@+id/album_cover"
         android:layout_width="334dp"
@@ -23,7 +24,6 @@
         app:layout_constraintVertical_bias="0.050000012" />
 
 
-
     <TextView
         android:id="@+id/song_name"
         style="@android:style/Widget.DeviceDefault.TextView.SpinnerItem"
Index: app/src/main/java/Adapter/ViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/Adapter/ViewAdapter.java	(revision cf73759abaaf20f2357f7431daf60f87bf358354)
+++ app/src/main/java/Adapter/ViewAdapter.java	(date 1552109160000)
@@ -37,7 +37,9 @@
     @NonNull
     @Override
     public ViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {
-        View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.list_row, viewGroup, false);
+        View view =
+                LayoutInflater.from(viewGroup.getContext())
+                        .inflate(R.layout.list_row, viewGroup, false);
         return new ViewHolder(view);
 
     }
@@ -55,23 +57,13 @@
         return listItems.size();
     }
 
-    public void startMusicService() {
-        Intent serviceIntent = new Intent(context.getApplicationContext(), MusicService.class);
-        ContextCompat.startForegroundService(context.getApplicationContext(), serviceIntent);
-    }
-
-    public void stopMusicService() {
-        Intent serviceIntent = new Intent(context.getApplicationContext(), MusicService.class);
-        context.stopService(serviceIntent);
-    }
-
     public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
 
-        public TextView artist;
-        public TextView song_name;
-        public ImageView albumCover;
+        private TextView artist;
+        private TextView song_name;
+        private ImageView albumCover;
 
-        public ViewHolder(@NonNull View itemView) {
+        private ViewHolder(@NonNull View itemView) {
             super(itemView);
 
             artist = itemView.findViewById(R.id.artist);
@@ -90,7 +82,9 @@
                 serviceIntent.putExtra("songName", item.getSongName());
                 serviceIntent.putExtra("artist", item.getArtist());
                 serviceIntent.putExtra("songPath", item.getSongPath());
+
                 ContextCompat.startForegroundService(v.getContext(), serviceIntent);
+
                 musicFragment.isMusicChosen = true;
                 MainActivity.item = item;
                 MainActivity.savedItem = item;
Index: app/src/main/res/layout/fragment_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_list.xml	(revision cf73759abaaf20f2357f7431daf60f87bf358354)
+++ app/src/main/res/layout/fragment_list.xml	(date 1551791420000)
@@ -1,6 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
+<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
Index: app/src/main/res/layout/list_row.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/list_row.xml	(revision cf73759abaaf20f2357f7431daf60f87bf358354)
+++ app/src/main/res/layout/list_row.xml	(date 1551875386000)
@@ -1,6 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical" android:layout_width="match_parent"
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
     android:layout_height="wrap_content"
     android:padding="5dp">
 
@@ -13,7 +15,7 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:background="@android:color/holo_blue_light"
-            android:orientation="horizontal">
+            android:orientation="horizontal" >
 
             <ImageView
                 android:id="@+id/album_cover"
Index: app/src/main/java/MusicHandler/MyMusicHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/MusicHandler/MyMusicHandler.java	(revision cf73759abaaf20f2357f7431daf60f87bf358354)
+++ app/src/main/java/MusicHandler/MyMusicHandler.java	(date 1551802004000)
@@ -32,7 +32,7 @@
             else {
                 String name = file.getName();
 
-                if(name.endsWith("mp3") || name.endsWith("MP3") || name.endsWith("m4a") || name.endsWith("M4A")) {
+                if(name.endsWith("mp3") || name.endsWith("MP3")) {
                     Log.d("reading: ", name);
                     parser = new MediaMetadataRetriever();
                     parser.setDataSource(file.getPath());
Index: app/src/main/java/Fragments/ListFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/Fragments/ListFragment.java	(revision cf73759abaaf20f2357f7431daf60f87bf358354)
+++ app/src/main/java/Fragments/ListFragment.java	(date 1552109353000)
@@ -18,21 +18,27 @@
 
 public class ListFragment extends Fragment {
 
-    private RecyclerView recyclerView;
-    private RecyclerView.Adapter adapter;
     private BottomNavigationView bottomNavigationView;
 
     @Nullable
     @Override
-    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+    public View onCreateView(@NonNull LayoutInflater inflater,
+                             @Nullable ViewGroup container,
+                             @Nullable Bundle savedInstanceState) {
 
-        View setView = inflater.inflate(R.layout.fragment_list, container, false);
+        View setView =
+                inflater.inflate(R.layout.fragment_list, container, false);
 
-        recyclerView = setView.findViewById(R.id.recyclerView);
+        RecyclerView recyclerView = setView.findViewById(R.id.recyclerView);
         recyclerView.setHasFixedSize(true);
         recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
 
-        adapter = new ViewAdapter(getActivity(), MainActivity.musicHandler.listItems, bottomNavigationView);
+        RecyclerView.Adapter adapter =
+                new ViewAdapter(
+                        getActivity(),
+                        MainActivity.musicHandler.listItems,
+                        bottomNavigationView);
+
         recyclerView.setAdapter(adapter);
 
 
Index: app/src/main/java/com/munhj/meloplayer/MusicNotification.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/munhj/meloplayer/MusicNotification.java	(revision cf73759abaaf20f2357f7431daf60f87bf358354)
+++ app/src/main/java/com/munhj/meloplayer/MusicNotification.java	(date 1552110554000)
@@ -7,6 +7,7 @@
 
 public class MusicNotification extends Application {
     public static final String CHANNEL_ID = "musicServiceChannel";
+    public static boolean isBackFromNotification = false;
 
 
     @Override
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision cf73759abaaf20f2357f7431daf60f87bf358354)
+++ app/build.gradle	(date 1552108359000)
@@ -4,7 +4,7 @@
     compileSdkVersion 28
     defaultConfig {
         applicationId "com.munhj.meloplayer"
-        minSdkVersion 15
+        minSdkVersion 16
         targetSdkVersion 28
         versionCode 1
         versionName "1.0"
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision cf73759abaaf20f2357f7431daf60f87bf358354)
+++ app/src/main/AndroidManifest.xml	(date 1551842586000)
@@ -19,6 +19,7 @@
             </intent-filter>
         </activity>
         <service android:name=".MusicService"/>
+        <receiver android:name=".NotificationReceiver"/>
     </application>
 
 </manifest>
\ No newline at end of file
